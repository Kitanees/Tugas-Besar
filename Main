#include<stdio.h>
#include<stdbool.h>
#include<string.h>
//Authors : Arsal Fadilah && Nauval Ozora

/*kumpulan modul*/
void LoadGame();
void DisplayMenu();
int InputMenu();
void StartGame();
int ChooseEnemy();
int ChooseLevel();
void InGame();
void InpuNama();
void PlayerVsPlayer();
int suit();
void Easy(int menangSuit);
void Display();
void persiapanMatrix();
void Turn();
void StartTime();
void p_1_InputX(int* x, int* y);
void p_2_InputO(int* x, int* y);
bool CekSel(int x, int y);
bool CekBar();
bool CekCol();
bool CekDiagon();
void GameOver();
void Medium(int menangSuit);
//void Display5x5();
void Hard(int menangSuit);
//void Display7x7();
void PlayerVsComputer();
char p_com_InputO();
void HighScores();
void Help();
void AboutAuthor();
void exitGame();

//variabel global
int enemy;
int level;
int ukuran;
char nama[20];
char matrix_2D[8][8];
bool mulai = true;

int main() {

    LoadGame();
menu:
    DisplayMenu();
    switch (InputMenu()) {
    case 1: StartGame(); break;
    case 2: HighScores(); break;
    case 3: Help(); break;
    case 4: AboutAuthor(); break;
    case 5: exitGame(); break;
    default:
        printf("WRONG INPUT NUMBER.\n");
        printf("Pilih nomer aja salah, apalagi pilih pasangan hidup -.-\n\n");
        system("pause");
        system("cls");
        goto menu;
    }

    return 0;
}

void LoadGame() {}

void DisplayMenu() {}

int InputMenu() {
    int x;

    scanf_s("%d", &x);

    return x;
}

void StartGame() {

    enemy = ChooseEnemy();
    level = ChooseLevel();

    InGame();

}

int ChooseEnemy() {
    int x;

    printf("Pilih Lawan : \n");
    printf("1. Player Vs Player\n");
    printf("2. Player Vs Computer\n\n");
    printf("Pilihan kamu : ");
    scanf_s("%d", &x);

    return x;
}

int ChooseLevel() {
    int x;

    printf("Pilih Level : \n");
    printf("1. Easy\n");
    printf("2. Medium\n");
    printf("2. Hard\n\n");
    printf("Pilihan kamu : ");
    scanf_s("%d", &x);

    return x;
}

void InGame() {

    switch (enemy) {
    case 1: PlayerVsPlayer(); break;
    case 2: PlayerVsComputer(); break;
    }

}

void InpuNama() {

    printf("nama kamu : ");
    fgets(nama, sizeof(nama), stdin);
    nama[strlen(nama) - 1] = '\0';
    scanf("%[^\n]s", nama);

}

void PlayerVsPlayer() {
    int menangSuit;

    //fflush(stdin);
    InpuNama();
    menangSuit = suit();
    switch (level) {
    case 1: Easy(menangSuit); break;
    case 2: Medium(menangSuit); break;
    case 3: Hard(menangSuit); break;
    }

}

int suit() {}

void Easy(int menangSuit) {

    ukuran = 4;

    persiapanMatrix();
    DisplayBoard();

    while (mulai) {
        StartTime();
        Turn(menangSuit);
    }

}

void persiapanMatrix() {
    char angkaCol, angkaBar;
    int i, j;

    angkaCol = '1';
    for (i = 0; i < ukuran ; i++) {
        angkaBar = '0';
        for (j = 0; j < ukuran; j++) {
            if (i == 0) {
                matrix_2D[i][j] = angkaBar;
                angkaBar = angkaBar + 1;
            }
            else if (j == 0) {
                matrix_2D[i][j] = angkaCol;
                angkaCol = angkaCol + 1;
            }
            else {
                matrix_2D[i][j] = '\0';
            }
        }
    }
}

void DisplayBoard(){
    int i, j;

    for (i = 0; i < ukuran; i++) {
        for (j = 0; j < ukuran; j++) {
            printf("%c ", matrix_2D[i][j]);
        }
        printf("\n");
    }

}

void Turn(int menangSuit) {
    int bar = 0, col = 0;

    if (enemy == 1 && menangSuit == 1) {
        p_1_InputX(&bar, &col);
        if (CekSel(bar, col)) {
            matrix_2D[bar][col] = 'X';
            DisplayBoard();
            if(CekBar()){
                mulai = false;
            } else if(CekCol()){
                mulai = false;
            } else if(CekDiagon()){
                mulai = false;
            }
        }

        if(mulai){
            p_2_InputO(&bar, &col);
            if (CekSel(bar, col)) {
                matrix_2D[bar][col] = 'O';
                DisplayBoard();
                if(CekBar()){
                    mulai = false;
                } else if(CekCol()){
                    mulai = false;
                } else if(CekDiagon()){
                    mulai = false;
                }
            }
        }
    }
    else if (enemy == 1 && menangSuit == 2) {
        p_2_InputO(&bar, &col);
        if (CekSel(bar, col)) {
            matrix_2D[bar][col] = 'O';
            DisplayBoard();
            if(CekBar()){
                mulai = false;
            } else if(CekCol()){
                mulai = false;
            } else if(CekDiagon()){
                mulai = false;
            }
        }
        if(mulai){
            p_1_InputX(&bar, &col);
            if (CekSel(bar, col)) {
                matrix_2D[bar][col] = 'X';
                DisplayBoard();
                if(CekBar()){
                    mulai = false;
                } else if(CekCol()){
                    mulai = false;
                } else if(CekDiagon()){
                    mulai = false;
                }
            }
        }
    }
    else if (enemy == 2 && menangSuit == 1) {
        p_1_InputX(&bar, &col);
        if (CekSel(bar, col)) {
            matrix_2D[bar][col] = 'X';
            DisplayBoard();
            if(CekBar()){
                mulai = false;
            } else if(CekCol()){
                mulai = false;
            } else if(CekDiagon()){
                mulai = false;
            }
        }
        if(mulai){
            p_com_InputO();
        }
    }
    else {
        p_com_InputO();
        if(mulai){
            p_1_InputX(&bar, &col);
            if (CekSel(bar, col)) {
                matrix_2D[bar][col] = 'X';
                DisplayBoard();
                if(CekBar()){
                    mulai = false;
                } else if(CekCol()){
                    mulai = false;
                } else if(CekDiagon()){
                    mulai = false;
                }
            }
        }
    }

}

void StartTime() {}

void p_1_InputX(int* x, int* y) {
    int baris, kolom;

    printf("(X) input baris kolom : ");
    scanf_s("%d %d", &baris, &kolom);

    *x = baris;
    *y = kolom;

}

void p_2_InputO(int* x, int* y) {
    int baris, kolom;

    printf("(O) input baris kolom : ");
    scanf_s("%d %d", &baris, &kolom);

    *x = baris;
    *y = kolom;

}

bool CekSel(int x, int y) {

    if (matrix_2D[x][y] == '\0') {
        return true;
    }
    else {
        return false;
    }

}

bool CekBar() {
    int count=0;
    int i, j;

    //cek bar X
    for(i=1; i<ukuran; i++){
    count = 0;
        for(j=1; j<ukuran; j++){
            if(matrix_2D[i][j]=='X'){
                count++;
            }
        }
        if(count==(ukuran-1)){
            return true;
        }
    }

    //cek bar O
    for(i=1; i<ukuran; i++){
    count = 0;
        for(j=1; j<ukuran; j++){
            if(matrix_2D[i][j]=='O'){
                count++;
            }
        }
        if(count==(ukuran-1)){
            return true;
        }
    }

    return false;

}

bool CekCol() {
    int count=0;
    int i, j;

    //cek Col X
    for(i=1; i<ukuran; i++){
    count = 0;
        for(j=1; j<ukuran; j++){
            if(matrix_2D[j][i]=='X'){
                count++;
            }
        }
        if(count==(ukuran-1)){
            return true;
        }
    }

    //cek Col O
    for(i=1; i<ukuran; i++){
    count = 0;
        for(j=1; j<ukuran; j++){
            if(matrix_2D[j][i]=='O'){
                count++;
            }
        }
        if(count==(ukuran-1)){
            return true;
        }
    }

    return false;

}

bool CekDiagon() {
    int count=0;
    int i, j;

    //cek diagon left to right X
    for(i=1; i<ukuran; i++){
        for(j=1; j<ukuran; j++){
            if(i==j){
                if(matrix_2D[j][i]=='X'){
                    count++;
                }
            }
        }
    }

    if(count==(ukuran-1)){
        return true;
    }

    //cek diagon rifht to left X
    count = 0;
    for(i=1; i<ukuran; i++){
        for(j=ukuran-1; j>=1; j--){
            if(i+j==ukuran){
                if(matrix_2D[j][i]=='X'){
                    count++;
                }
            }
        }
    }

    if(count==(ukuran-1)){
        return true;
    }

    //cek diagon left to right O
    count = 0;
    for(i=1; i<ukuran; i++){
        for(j=1; j<ukuran; j++){
            if(i==j){
                if(matrix_2D[j][i]=='O'){
                    count++;
                }
            }
        }
    }

    if(count==(ukuran-1)){
        return true;
    }

    //cek diagon rifht to left O
    count = 0;
    for(i=1; i<ukuran; i++){
        for(j=ukuran-1; j>=1; j--){
            if(i+j==ukuran){
                if(matrix_2D[j][i]=='O'){
                    count++;
                }
            }
        }
    }

    if(count==(ukuran-1)){
        return true;
    }

    //jika tidak sama
    return false;

}

void GameOver() {}

void Medium(int menangSuit) {}

void Display5x5() {}

void Hard(int menangSuit) {}

void Display7x7() {}

void PlayerVsComputer() {}

char p_com_InputO() {}

void HighScores() {}

void Help() {
printf("\t\t\t\t\t\tHELP\n");
		printf("======================================================================================================\n");
		printf("1. Player pertama akan diminta mengisi kolom dan baris yang diinginkan seusai keinginan\n");
		printf("2. Giliran main akan dilempar ke player kedua setelah n(5,10, atau 15) detik\n");
		printf("3. Player kedua akan mendapat gilirannya untuk mengisi kolom dan baris yang belum terisi\n");
		printf("4. Langkah 1 - 3 akan diulangi terus sampai ada salah satu player yang berhasil\n");
		printf("   mengurutkan X/O sebanyak tiga kali secara berurutan atau bidang permainan sudah penuh\n");
		printf("5. Jika permainan sudah selesai, maka game akan meminta inputan untuk melanjutkan permainan atau tidak.\n");
}

void AboutAuthor() {
int a;

		//logaritma
		printf("pilih salah satu author: 1. Arsal Fadilah\n\t\t\t 2. Nauval Ozora Mahadri\n");
		printf("Pilih no author : ");
		scanf("%d", &a);

		//cek kesalahan pilihan
		if(a<1 || a>2){
			system("cls");
			printf("Nomer Author yang anda masukan salah !!!\n");
            printf("Coba lagi\n");
        system("pause");
        system("cls");
		}else{
		if(a<2){
				printf("Nama \t\t\t: Arsal Fadilah\n");
				printf("Tempat, Tanggal Lahir \t: Bandung, 26 April 2002\n");
				printf("Jenis Kelamin \t\t: Laki-laki\n");
				printf("Agama \t\t\t: Islam\n");
				printf("Alamat \t\t\t: Kp. Cidawolong 1 Rt 03/14 Des.Biru Kec.Majalaya Kab.Bandung\n");
				printf("Nomor Telepon \t\t: 081214151280\n");
				printf("E-mail \t\t\t: arsalfadilah2002@gmail.com\n");
				printf("Hobi \t\t\t: Basket\n");
				printf("Motto Hidup \t\t: Never give up ! Trust me its work\n");
			}else{
				printf("Nama \t\t\t: Nauval Ozora Mahadri\n");
				printf("Tempat, Tanggal Lahir \t: Bandung, 29 Juli 2002\n");
				printf("Jenis Kelamin \t\t: Laki-laki\n");
				printf("Agama \t\t\t: Islam\n");
				printf("Alamat \t\t\t: Jalan Cibangkong Tengah RT.09/RW.11 NO.300/120\n");
				//printf("Alamat Asal \t: Kp. Cidawolong 1 Rt 03/14 Des.Biru Kec.Majalaya Kab.Bandung\n");
				printf("Nomor Telepon \t\t: 085624333058\n");
				printf("E-mail \t\t\t: ozoramahadri02@gmail.com\n");
				printf("Hobi \t\t\t: baca\n");
				printf("Motto Hidup \t\t: gak ada yang gak bisa\n");
			}
		}
}

void exitGame() {}
